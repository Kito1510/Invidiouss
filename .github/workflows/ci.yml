name: Invidious CI

on:
  schedule:
    - cron: "0 0 * * *" # Every day at 00:00
  push:
    branches:
      - "master"
      - "api-only"
  pull_request:
    branches: "*"
    paths-ignore:
      - "*.md"
      - LICENCE
      - TRANSLATION
      - invidious.service
      - .git*
      - .editorconfig

      - screenshots/*
      - assets/**
      - locales/*
      - config/**
      - .github/ISSUE_TEMPLATE/*
      - kubernetes/**

jobs:
  build:

    runs-on: ubuntu-latest

    name: "build - crystal: ${{ matrix.crystal }}, stable: ${{ matrix.stable }}"

    continue-on-error: ${{ !matrix.stable }}

    strategy:
      fail-fast: false
      matrix:
        stable: [true]
        crystal:
          - 1.0.0
          - 1.1.1
        include:
          - crystal: nightly
            stable: false

    steps:
      - uses: actions/checkout@v2

      - name: Install Crystal
        uses: oprypin/install-crystal@v1.2.4
        with:
          crystal: ${{ matrix.crystal }}

      - name: Cache Shards
        uses: actions/cache@v2
        with:
          path: ./lib
          key: shards-${{ hashFiles('shard.lock') }}

      - name: Install Shards
        run: |
          if ! shards check; then
            shards install
          fi

      - name: Run tests
        run: crystal spec

      - name: Run lint
        run: |
          if ! crystal tool format --check; then
            crystal tool format
            git diff
            exit 1
          fi

      - name: Build
        run: crystal build --warnings all --error-on-warnings --error-trace src/invidious.cr

  build-docker:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build Docker
        run: docker-compose up -d

      - name: Test Docker
        run: while curl -Isf http://localhost:3000; do sleep 1; done

  build-docker-arm64:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx

      - name: Build Docker ARM64 image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile.arm64
          platforms: linux/arm64/v8
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Test Docker
        run: while curl -Isf http://localhost:3000; do sleep 1; done

      - name: Override old Docker cache
        if: github.ref == 'refs/heads/master'
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache


